#!/bin/sh -e

if [ -z "${WALLET_ADDRESS}" ]; then
        echo "!!! WALLET_ADDRESS must be set to an ERC20 wallet address";
        exit 1;
fi;

if [ -n "${DAEMONADDRESS}" ]; then
  sed -i "s/127\.0\.0\.1/${DAEMONADDRESS}/" /usr/lib/node_modules/storjshare-daemon/lib/config/daemon.js
fi

# If our hostname has a hyphen-delimited suffix with a unique identifier, e.g. the ordinal if
#    we're in a Kubernetes statefulset, use that suffix as a subdirectry in the main DATADIR
if [ "$(echo "${USE_HOSTNAME_SUFFIX}" | tr /a-z/ /A-Z/)" == 'TRUE' ]; then
        DATADIR="${DATADIR}/$(hostname | rev | cut -d- -f1 | rev)";
fi;

storjshare daemon -F &
sleep 1;

# storjstat.com API-key modifying their config file.
sed -i "s/YOUR-TOKEN-HERE/${MONITORKEY}/" /StorjMonitor/storjMonitor.js;

mkdir -pv "${DATADIR}/share" "${DATADIR}/log";
if [ ! -f "${DATADIR}/config.json" ]; then
        storjshare create --storj "${WALLET_ADDRESS}" --storage "${DATADIR}/share" --size "${SHARE_SIZE}" --rpcport 4000 --rpcaddress "${RPCADDRESS}" --tunnelportmin 4001 --tunnelportmax 4003 --logdir "${DATADIR}/log" --outfile "${DATADIR}/config.json" --noedit;
fi;

# Modded code to handle building multiple nodes; probably could be cleaned up.
i=1;
j=4000;
while [ "$i" -le "${NODE_COUNT}" ]; do
         mkdir -pv "${DATADIR}/${NODE_DIR}$i/share" "${DATADIR}/${NODE_DIR}$i/log";
         if [ ! -f "${DATADIR}/${NODE_DIR}$i/config.json" ]; then
             j=$(( j + 1 ));
             storjshare create --storj "${WALLET_ADDRESS}" --storage "${DATADIR}/${NODE_DIR}$i/share" --size "${SHARE_SIZE}" --rpcport "$j" --rpcaddress "${RPCADDRESS}"  --logdir "${DATADIR}/${NODE_DIR}$i/log" --outfile "${DATADIR}/${NODE_DIR}$i/config.json" --noedit;
         fi;
      i=$(( i + 1 ));
done;

storjshare start --config "${DATADIR}/config.json";

i=1;
while [ "$i" -le "${NODE_COUNT}" ]; do
storjshare start --config "${DATADIR}/${NODE_DIR}$i/config.json";
      i=$(( i + 1 ));
done;

cd /StorjMonitor;
(/StorjMonitor/storjMonitor.sh &) &

wait;
